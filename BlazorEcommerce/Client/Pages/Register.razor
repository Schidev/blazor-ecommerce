@page "/register"
@inject IAuthService AuthService


<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegestration">
    
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="email">
            Email
        </label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    
    <div class="mb-3">
        <label for="password">
            Password
        </label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    
    <div class="mb-3">
        <label for="confirmedPassword">
            Confirm password
        </label>
        <InputText id="confirmedPassword" @bind-Value="user.ConfirmedPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmedPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">
        Register
    </button>

    <div class="@messageCssClass">
        <span>@message</span>
    </div>

    <ValidationSummary />

</EditForm>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegestration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        messageCssClass = result.Success ? "text-success": "text-danger";
    }

}
